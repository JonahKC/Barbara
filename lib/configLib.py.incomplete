from discord_components import Select, SelectOption, Button, Component

class Config():
  def __init__(self, name, components:list[list[Component]]=None,options=None, currentOption=0):
    raise NotImplementedError
    return
    self.name = name
    self.components = components
    self.options = options
    self.currentOption = currentOption

  # value example: {'label': 'value', 'value': 'true'}
  def addEnum(self, name, value, values):
    return

  def addList(self, name, values):
    return

  def addStr(self, name, value):
    return

  def getComponents(self):
    return self.options




class Option():
  def __init__(self, name, bot):
    self.name = name

  def getComponents():
    return [None]


class EnumOption(Option):
  def __init__(self, name, bot, value, values):
    self.name = name
    self.bot = bot
    self.value = value
    self.values = values

  def getComponents(self):
    components = []
    tempOptions = []
    components.append(Button(label = self.name, disabled = True))
    components.append(Button(label = "Reset"))
    for value in self.values:
      tempOptions.append(SelectOption(label=value.label, value=value.value))
    components.append([Select(
      placeholder = self.currentOption,
      options = tempOptions
		)])
    return components


class ListOption(Option):
  def __init__(self, name, bot, values):
    self.name = name
    self.bot = bot
    self.values = values
  
  def getComponents(self):
    components = []
    tempOptions = []
    components.append(Button(label = self.name, disabled = True))
    lastValue = ""
    for value in self.values:
      lastValue = value
      tempOptions.append(SelectOption(label=value, value=value))
    components.append(Select(placeholder = lastValue, options = tempOptions))

class StrOption(Option):
  def __init__(self, name, bot, value):
    self.name = name
    self.bot = bot
    self.value = value

  def getComponents(self):
    components = []
    components.append(Button(label = self.name, disabled = True))
    components.append(Button(label = self.value))
    return components