from discord.ext import commands
from wikipedia import summary, search
from threading import Thread
from asyncio import run

class Wikipedia(commands.Cog):
  def __init__(self, bot):
    self.bot = bot

  async def getWikiPageCallback(summary, message):
    await message.edit(content=summary)

  def getWikiPage(wikiSearch: str, callback, message):
    try:
      run(callback(summary(search(wikiSearch, results=1)), message))
    except Exception as e:
      run(callback(repr(e)))
    return

  @commands.command() # %wikipedia [search]
  async def wikipedia(self, ctx, search: str):
    wikipediaMessage = await ctx.send("Loading...")
    wikipediaThread = Thread(target=self.getWikiPage, args=(search, self.getWikiPageCallback, wikipediaMessage))
    wikipediaThread.start()

def setup(bot):
  bot.add_cog(Wikipedia(bot))